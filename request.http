### Install REST client extention to test api endpoints
@baseUrl = http://localhost:3000

### Fetch all graphs
GET {{baseUrl}}/api/classes

### Fetch all graphs
GET {{baseUrl}}/api/classes

### Add a new graph, validation fail
POST {{baseUrl}}/api/classes
Content-Type: application/json

{
    "title": false,
    "description": 123,
    "nodes": ["NodeX", "NodeY", "NodeZ"]
}


### Save Graph
POST {{baseUrl}}/api/persist
Content-Type: application/json

{

    "dbName" : "http://example.org/Private",
    "graphData": {
  "@context": {
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "iris": "https://kg.scania.com/it/iris_orchestration/"
  },
  "@graph": [
    {
      "@id": "iris:OWLNamedIndividual_17ea3a4b_7fe0_4632_8eab_5bf3dd7a9e85",
      "@type": [
        "iris:HTTPAction",
        "owl:NamedIndividual"
      ],
      "rdfs:label": {
        "@value": "httpAction_pizza",
        "@language": "en"
      },
      "iris:hasConnector": {
        "@id": "iris:OWLNamedIndividual_01cbb96d_1c66_44c3_b6b7_666b6374cf1f"
      },
      "iris:hasNextAction": {
        "@id": "iris:OWLNamedIndividual_1e0860b8_618c_4fee_a371_815b05f9da29"
      },
      "iris:hasSystem": {
        "@id": "iris:OWLNamedIndividual_69d999b0_9893_4beb_b44b_feeddc8f1de0"
      },
      "iris:inputParameter": {
        "@id": "iris:OWLNamedIndividual_4f1605c9_3e0c_4dd3_9073_bc36c928b79e"
      },
      "iris:outputParameter": {
        "@id": "iris:OWLNamedIndividual_f9879480_3a86_4ddb_ba74_f0d217f6b96b"
      },
      "iris:endpoint": "/pizzas",
      "iris:httpQueryParameter": "{\"size\":\"\"}"
    }
  ]
}


}



### Save Graph - validation fail
POST {{baseUrl}}/api/persist
Content-Type: application/json

{

    "dbName" : "http://example.org/Private12323432423423432432432432423432423423423423423423423423423432",
    "graphData": {
  "@context": {
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "iris": "https://kg.scania.com/it/iris_orchestration/"
  },
  "@graph": [
    {
      "@id": "iris:OWLNamedIndividual_17ea3a4b_7fe0_4632_8eab_5bf3dd7a9e85",
      "@type": [
        "iris:HTTPAction",
        "owl:NamedIndividual"
      ],
      "rdfs:label": {
        "@value": "httpAction_pizza",
        "@language": "en"
      },
      "iris:hasConnector": {
        "@id": "iris:OWLNamedIndividual_01cbb96d_1c66_44c3_b6b7_666b6374cf1f"
      },
      "iris:hasNextAction": {
        "@id": "iris:OWLNamedIndividual_1e0860b8_618c_4fee_a371_815b05f9da29"
      },
      "iris:hasSystem": {
        "@id": "iris:OWLNamedIndividual_69d999b0_9893_4beb_b44b_feeddc8f1de0"
      },
      "iris:inputParameter": {
        "@id": "iris:OWLNamedIndividual_4f1605c9_3e0c_4dd3_9073_bc36c928b79e"
      },
      "iris:outputParameter": {
        "@id": "iris:OWLNamedIndividual_f9879480_3a86_4ddb_ba74_f0d217f6b96b"
      },
      "iris:endpoint": "/pizzas",
      "iris:httpQueryParameter": "{\"size\":\"\"}"
    }
  ]
}
}


### parse shacl
GET {{baseUrl}}/api/parse-ttl/?className=HTTPAction

### List Flows 
GET  {{baseUrl}}/api/flows
Content-Type: application/json

### Get Flow with Id
GET  {{baseUrl}}/api/flow/acadf73f-6008-46e6-a2c4-ae928bde315d
Content-Type: application/json

### Delete Flow
DELETE {{baseUrl}}/api/flow/acadf73f-6008-46e6-a2c4-ae928bde315d
Content-Type: application/json

### Check if name exists 
GET  {{baseUrl}}/api/flow/name-exists/http%3A%2F%2Fexample.org%2test
Content-Type: application/json

### Get parameters with flow id
GET  {{baseUrl}}/api/parameters?flowId=123
Content-Type: application/json

### Get parameters with flow id
GET  {{baseUrl}}/api/parameter?flowId=123
Content-Type: application/json

### Create a new parameter
POST {{baseUrl}}/api/parameter
Content-Type: application/json

{
    "name": "cool Parameter ",
    "iri": "http://example.org/iri",
    "value": {
        "key": "value"
    }
}

### Fetch a parameter by ID
GET {{baseUrl}}/api/parameters?id=parameter-id-here
Content-Type: application/json

### Update a parameter by ID
PUT {{baseUrl}}/api/parameters?id=parameter-id-here
Content-Type: application/json

{
    "name": "Updated Parameter",
    "flowId": "123",
    "iri": "http://example.org/updated-iri",
    "value": {
        "key": "updated-value"
    }
}

### Delete a parameter by ID
DELETE {{baseUrl}}/api/parameters?id=parameter-id-here
Content-Type: application/json

### Execute Graph Synchronously
POST {{baseUrl}}/api/execute/sync
Content-Type: application/json

{
    "subjectIri": "graph-id-here",
    "parameters": []
}

### Fetch All Tasks
GET {{baseUrl}}/api/execute/tasks
Content-Type: application/json

### Fetch Task Parameters by IRI
GET {{baseUrl}}/api/parameter/template?iri=task-iri-here
Content-Type: application/json

### Fetch execution logs 
GET {{baseUrl}}/api/execute/logs/?executionId=http://result2024120213402236
Content-Type: application/json

### Context generation from file
POST {{baseUrl}}/api/generate-context
Content-Type: application/json